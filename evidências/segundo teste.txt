C:\Users\Cesar\Desktop\projetos\projeto-terraform-pucminas
Î» .\terraform.exe apply
data.aws_ami.ubuntu: Reading...
data.aws_ami.ubuntu: Read complete after 1s [id=ami-0355b1f7367016dc5]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_instance.this[0] will be created
  + resource "aws_instance" "this" {
      + ami                                  = "ami-0355b1f7367016dc5"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = true
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "terraform"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Billing"     = "Infrastructure"
          + "Department"  = "systems"
          + "Environment" = "default"
          + "ManagedBy"   = "Terraform"
          + "Name"        = "default-terraform-pucminas-site"
          + "Owner"       = "DevOps Team"
          + "Provider"    = "Company Name"
          + "UserEmail"   = "awsteste1987@gmail.com"
        }
      + tags_all                             = {
          + "Billing"     = "Infrastructure"
          + "Department"  = "systems"
          + "Environment" = "default"
          + "ManagedBy"   = "Terraform"
          + "Name"        = "default-terraform-pucminas-site"
          + "Owner"       = "DevOps Team"
          + "Provider"    = "Company Name"
          + "UserEmail"   = "awsteste1987@gmail.com"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification {
          + capacity_reservation_preference = (known after apply)

          + capacity_reservation_target {
              + capacity_reservation_id                 = (known after apply)
              + capacity_reservation_resource_group_arn = (known after apply)
            }
        }

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + enclave_options {
          + enabled = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + maintenance_options {
          + auto_recovery = (known after apply)
        }

      + metadata_options {
          + http_endpoint               = (known after apply)
          + http_put_response_hop_limit = (known after apply)
          + http_tokens                 = (known after apply)
          + instance_metadata_tags      = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_card_index    = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + private_dns_name_options {
          + enable_resource_name_dns_a_record    = (known after apply)
          + enable_resource_name_dns_aaaa_record = (known after apply)
          + hostname_type                        = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }
    }

  # aws_internet_gateway.internet_gateway_teste_pucminas will be created
  + resource "aws_internet_gateway" "internet_gateway_teste_pucminas" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "internet_gateway_teste_pucminas"
        }
      + tags_all = {
          + "Name" = "internet_gateway_teste_pucminas"
        }
      + vpc_id   = (known after apply)
    }

  # aws_route.route_teste_pucminas will be created
  + resource "aws_route" "route_teste_pucminas" {
      + destination_cidr_block = "0.0.0.0/0"
      + gateway_id             = (known after apply)
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)
    }

  # aws_route_table.route_table_teste_pucminas will be created
  + resource "aws_route_table" "route_table_teste_pucminas" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + carrier_gateway_id         = ""
              + cidr_block                 = "0.0.0.0/0"
              + core_network_arn           = ""
              + destination_prefix_list_id = ""
              + egress_only_gateway_id     = ""
              + gateway_id                 = (known after apply)
              + instance_id                = ""
              + ipv6_cidr_block            = ""
              + local_gateway_id           = ""
              + nat_gateway_id             = ""
              + network_interface_id       = ""
              + transit_gateway_id         = ""
              + vpc_endpoint_id            = ""
              + vpc_peering_connection_id  = ""
            },
        ]
      + tags             = {
          + "Name" = "route_table_teste_pucminas"
        }
      + tags_all         = {
          + "Name" = "route_table_teste_pucminas"
        }
      + vpc_id           = (known after apply)
    }

  # aws_route_table_association.route_table_association_teste_pucminas will be created
  + resource "aws_route_table_association" "route_table_association_teste_pucminas" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_security_group.sg-web will be created
  + resource "aws_security_group" "sg-web" {
      + arn                    = (known after apply)
      + description            = "Security Group para acesso SSH e HTTP"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 8080
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 8080
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "HTTP"
              + from_port        = 80
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 80
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "SSH"
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
            },
        ]
      + name                   = "default-terraform-pucminas-sg-web"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Billing"     = "Infrastructure"
          + "Department"  = "systems"
          + "Environment" = "default"
          + "ManagedBy"   = "Terraform"
          + "Name"        = "default-terraform-pucminas-sg"
          + "Owner"       = "DevOps Team"
          + "Provider"    = "Company Name"
          + "UserEmail"   = "awsteste1987@gmail.com"
        }
      + tags_all               = {
          + "Billing"     = "Infrastructure"
          + "Department"  = "systems"
          + "Environment" = "default"
          + "ManagedBy"   = "Terraform"
          + "Name"        = "default-terraform-pucminas-sg"
          + "Owner"       = "DevOps Team"
          + "Provider"    = "Company Name"
          + "UserEmail"   = "awsteste1987@gmail.com"
        }
      + vpc_id                 = (known after apply)
    }

  # aws_subnet.subnet_teste_pucminas will be created
  + resource "aws_subnet" "subnet_teste_pucminas" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "subnet_teste_pucminas"
        }
      + tags_all                                       = {
          + "Name" = "subnet_teste_pucminas"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.vpc_teste_pucminas will be created
  + resource "aws_vpc" "vpc_teste_pucminas" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "vpc_teste_pucminas"
        }
      + tags_all                             = {
          + "Name" = "vpc_teste_pucminas"
        }
    }

Plan: 8 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + ec2_public_ip = (known after apply)

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_vpc.vpc_teste_pucminas: Creating...
aws_vpc.vpc_teste_pucminas: Still creating... [10s elapsed]
aws_vpc.vpc_teste_pucminas: Creation complete after 14s [id=vpc-08bb819c5d6eac578]
aws_internet_gateway.internet_gateway_teste_pucminas: Creating...
aws_subnet.subnet_teste_pucminas: Creating...
aws_security_group.sg-web: Creating...
aws_internet_gateway.internet_gateway_teste_pucminas: Creation complete after 1s [id=igw-0399ccc064bf8c602]
aws_route_table.route_table_teste_pucminas: Creating...
aws_subnet.subnet_teste_pucminas: Creation complete after 1s [id=subnet-0e8fa5efcf125bc47]
aws_route_table.route_table_teste_pucminas: Creation complete after 2s [id=rtb-0887a83989dfc5130]
aws_route_table_association.route_table_association_teste_pucminas: Creating...
aws_route.route_teste_pucminas: Creating...
aws_route_table_association.route_table_association_teste_pucminas: Creation complete after 1s [id=rtbassoc-0d2568b0bba859ac5]
aws_route.route_teste_pucminas: Creation complete after 1s [id=r-rtb-0887a83989dfc51301080289494]
aws_security_group.sg-web: Creation complete after 4s [id=sg-031da19c8998cb4ab]
aws_instance.this[0]: Creating...
aws_instance.this[0]: Still creating... [10s elapsed]
aws_instance.this[0]: Still creating... [20s elapsed]
aws_instance.this[0]: Still creating... [30s elapsed]
aws_instance.this[0]: Creation complete after 34s [id=i-0a40e692cc144d077]

Apply complete! Resources: 8 added, 0 changed, 0 destroyed.

Outputs:

ec2_public_ip = "23.20.254.72"